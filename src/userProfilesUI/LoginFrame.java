/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userProfilesUI;

import database.SettingHandler;
import java.security.NoSuchAlgorithmException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import userProfilesHandler.UserProfilesHandler;

/**
 *
 * @author Thaichau
 */
public class LoginFrame extends javax.swing.JFrame {

    private LandlordFrame landlordFrame;
    private TenantFrame TenantFrame;
    private ManagerFrame managerFrame;

    /**
     * Creates new form LoginFrame
     */
    public LoginFrame() {
        initComponents();
        try {
            this.chkRememberMe.removeItemListener(chRememberListener);
            this.loadRemember();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(LoginFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(LoginFrame.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            this.chkRememberMe.addItemListener(chRememberListener);
        }
    }

    private boolean checkRemember() throws SQLException, ClassNotFoundException {
        SettingHandler sh2 = new SettingHandler();
        if (sh2.checkRememberMe(this.txtLogUser.getText(), this.cbUserType.getSelectedIndex())) {
            sh2.dbClose();
            return true;
        }
        sh2.dbClose();
        return false;
    }

    private void saveRemember() throws SQLException, ClassNotFoundException {
        SettingHandler sh1 = new SettingHandler();
        sh1.saveRememberMe(this.txtLogUser.getText(), String.valueOf(this.pwLogPassword.getPassword()), this.cbUserType.getSelectedIndex());
        sh1.dbClose();
    }

    private void loadRemember() throws ClassNotFoundException, SQLException {
        SettingHandler sh3 = new SettingHandler();
        int type = this.cbUserType.getSelectedIndex();
        int result = sh3.loadRememberMe(this.txtLogUser, this.pwLogPassword, type);
        if (result == 1) {
            this.chkRememberMe.setSelected(true);
        } else {
            this.chkRememberMe.setSelected(false);
        }
        sh3.dbClose();
    }

    private void deleteRemember() throws SQLException, ClassNotFoundException {
        SettingHandler sh4 = new SettingHandler();
        sh4.deleteRememberMe(this.txtLogUser.getText());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dlgSetting = new javax.swing.JDialog();
        this.dlgSetting.setLocation(350, 250);
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtUseDB = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtURL = new javax.swing.JTextField();
        pwPassDB = new javax.swing.JPasswordField();
        btnSettingSave = new javax.swing.JButton();
        btnSettingClose = new javax.swing.JButton();
        loggingContextMenu = new javax.swing.JPopupMenu();
        Cut = new javax.swing.JMenuItem();
        Copy = new javax.swing.JMenuItem();
        Paste = new javax.swing.JMenuItem();
        Delete = new javax.swing.JMenuItem();
        sepMenu = new javax.swing.JPopupMenu.Separator();
        SelectAll = new javax.swing.JMenuItem();
        DeleteAll = new javax.swing.JMenuItem();
        UserIDContext = new javax.swing.JPopupMenu();
        Cut1 = new javax.swing.JMenuItem();
        Copy1 = new javax.swing.JMenuItem();
        Paste1 = new javax.swing.JMenuItem();
        Delete1 = new javax.swing.JMenuItem();
        sepMenu1 = new javax.swing.JPopupMenu.Separator();
        SelectAll1 = new javax.swing.JMenuItem();
        DeleteAll1 = new javax.swing.JMenuItem();
        paswordContext = new javax.swing.JPopupMenu();
        Cut2 = new javax.swing.JMenuItem();
        Copy2 = new javax.swing.JMenuItem();
        Paste2 = new javax.swing.JMenuItem();
        Delete2 = new javax.swing.JMenuItem();
        sepMenu2 = new javax.swing.JPopupMenu.Separator();
        SelectAll2 = new javax.swing.JMenuItem();
        DeleteAll2 = new javax.swing.JMenuItem();
        settingUserCont = new javax.swing.JPopupMenu();
        Cut3 = new javax.swing.JMenuItem();
        Copy3 = new javax.swing.JMenuItem();
        Paste3 = new javax.swing.JMenuItem();
        Delete3 = new javax.swing.JMenuItem();
        sepMenu3 = new javax.swing.JPopupMenu.Separator();
        SelectAll3 = new javax.swing.JMenuItem();
        DeleteAll3 = new javax.swing.JMenuItem();
        settingPasswordCont = new javax.swing.JPopupMenu();
        Cut4 = new javax.swing.JMenuItem();
        Copy4 = new javax.swing.JMenuItem();
        Paste4 = new javax.swing.JMenuItem();
        Delete4 = new javax.swing.JMenuItem();
        sepMenu4 = new javax.swing.JPopupMenu.Separator();
        SelectAll4 = new javax.swing.JMenuItem();
        DeleteAll4 = new javax.swing.JMenuItem();
        settingURLCont = new javax.swing.JPopupMenu();
        Cut5 = new javax.swing.JMenuItem();
        Copy5 = new javax.swing.JMenuItem();
        Paste5 = new javax.swing.JMenuItem();
        Delete5 = new javax.swing.JMenuItem();
        sepMenu5 = new javax.swing.JPopupMenu.Separator();
        SelectAll5 = new javax.swing.JMenuItem();
        DeleteAll5 = new javax.swing.JMenuItem();
        utils.WindowPos.setPostion(this);
        jPanel1 = new javax.swing.JPanel();
        btnSetting = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtLogUser = new javax.swing.JTextField();
        pwLogPassword = new javax.swing.JPasswordField();
        cbUserType = new javax.swing.JComboBox();
        btnLogin = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        chkShowPasswordLogin = new javax.swing.JCheckBox();
        chkRememberMe = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taLoginLog = new javax.swing.JTextArea();

        dlgSetting.setTitle("Setting SQL Server Database Connection");

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setText("Username");

        txtUseDB.setText("sa");
        txtUseDB.setComponentPopupMenu(settingUserCont);

        jLabel4.setText("Password");

        jLabel5.setText("URL");

        txtURL.setText("jdb:sqlserver://localhost:1433;Database=AMSDB");
        txtURL.setComponentPopupMenu(settingURLCont);

        pwPassDB.setText("th@ich@u441985");
        pwPassDB.setComponentPopupMenu(settingPasswordCont);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtUseDB)
                    .addComponent(txtURL, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                    .addComponent(pwPassDB))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtUseDB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(pwPassDB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtURL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnSettingSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/1341567561_tick_circle.png"))); // NOI18N
        btnSettingSave.setText("Save");
        btnSettingSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSettingSaveActionPerformed(evt);
            }
        });

        btnSettingClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/close.png"))); // NOI18N
        btnSettingClose.setText("Close");
        btnSettingClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSettingCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dlgSettingLayout = new javax.swing.GroupLayout(dlgSetting.getContentPane());
        dlgSetting.getContentPane().setLayout(dlgSettingLayout);
        dlgSettingLayout.setHorizontalGroup(
            dlgSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgSettingLayout.createSequentialGroup()
                .addGroup(dlgSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dlgSettingLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(dlgSettingLayout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(btnSettingSave)
                        .addGap(45, 45, 45)
                        .addComponent(btnSettingClose)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dlgSettingLayout.setVerticalGroup(
            dlgSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgSettingLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(dlgSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSettingSave)
                    .addComponent(btnSettingClose))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Cut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        Cut.setText("Cut");
        Cut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CutActionPerformed(evt);
            }
        });
        loggingContextMenu.add(Cut);

        Copy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        Copy.setText("Copy");
        Copy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CopyActionPerformed(evt);
            }
        });
        loggingContextMenu.add(Copy);

        Paste.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        Paste.setText("Paste");
        Paste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasteActionPerformed(evt);
            }
        });
        loggingContextMenu.add(Paste);

        Delete.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0));
        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });
        loggingContextMenu.add(Delete);
        loggingContextMenu.add(sepMenu);

        SelectAll.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        SelectAll.setText("Select All");
        SelectAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectAllActionPerformed(evt);
            }
        });
        loggingContextMenu.add(SelectAll);

        DeleteAll.setText("Delete All");
        DeleteAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteAllActionPerformed(evt);
            }
        });
        loggingContextMenu.add(DeleteAll);

        Cut1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        Cut1.setText("Cut");
        Cut1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cut1ActionPerformed(evt);
            }
        });
        UserIDContext.add(Cut1);

        Copy1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        Copy1.setText("Copy");
        Copy1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Copy1ActionPerformed(evt);
            }
        });
        UserIDContext.add(Copy1);

        Paste1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        Paste1.setText("Paste");
        Paste1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Paste1ActionPerformed(evt);
            }
        });
        UserIDContext.add(Paste1);

        Delete1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0));
        Delete1.setText("Delete");
        Delete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete1ActionPerformed(evt);
            }
        });
        UserIDContext.add(Delete1);
        UserIDContext.add(sepMenu1);

        SelectAll1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        SelectAll1.setText("Select All");
        SelectAll1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectAll1ActionPerformed(evt);
            }
        });
        UserIDContext.add(SelectAll1);

        DeleteAll1.setText("Delete All");
        DeleteAll1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteAll1ActionPerformed(evt);
            }
        });
        UserIDContext.add(DeleteAll1);

        Cut2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        Cut2.setText("Cut");
        Cut2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cut2ActionPerformed(evt);
            }
        });
        paswordContext.add(Cut2);

        Copy2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        Copy2.setText("Copy");
        Copy2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Copy2ActionPerformed(evt);
            }
        });
        paswordContext.add(Copy2);

        Paste2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        Paste2.setText("Paste");
        Paste2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Paste2ActionPerformed(evt);
            }
        });
        paswordContext.add(Paste2);

        Delete2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0));
        Delete2.setText("Delete");
        Delete2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete2ActionPerformed(evt);
            }
        });
        paswordContext.add(Delete2);
        paswordContext.add(sepMenu2);

        SelectAll2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        SelectAll2.setText("Select All");
        SelectAll2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectAll2ActionPerformed(evt);
            }
        });
        paswordContext.add(SelectAll2);

        DeleteAll2.setText("Delete All");
        DeleteAll2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteAll2ActionPerformed(evt);
            }
        });
        paswordContext.add(DeleteAll2);

        Cut3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        Cut3.setText("Cut");
        Cut3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cut3ActionPerformed(evt);
            }
        });
        settingUserCont.add(Cut3);

        Copy3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        Copy3.setText("Copy");
        Copy3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Copy3ActionPerformed(evt);
            }
        });
        settingUserCont.add(Copy3);

        Paste3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        Paste3.setText("Paste");
        Paste3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Paste3ActionPerformed(evt);
            }
        });
        settingUserCont.add(Paste3);

        Delete3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0));
        Delete3.setText("Delete");
        Delete3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete3ActionPerformed(evt);
            }
        });
        settingUserCont.add(Delete3);
        settingUserCont.add(sepMenu3);

        SelectAll3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        SelectAll3.setText("Select All");
        SelectAll3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectAll3ActionPerformed(evt);
            }
        });
        settingUserCont.add(SelectAll3);

        DeleteAll3.setText("Delete All");
        DeleteAll3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteAll3ActionPerformed(evt);
            }
        });
        settingUserCont.add(DeleteAll3);

        Cut4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        Cut4.setText("Cut");
        Cut4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cut4ActionPerformed(evt);
            }
        });
        settingPasswordCont.add(Cut4);

        Copy4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        Copy4.setText("Copy");
        Copy4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Copy4ActionPerformed(evt);
            }
        });
        settingPasswordCont.add(Copy4);

        Paste4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        Paste4.setText("Paste");
        Paste4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Paste4ActionPerformed(evt);
            }
        });
        settingPasswordCont.add(Paste4);

        Delete4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0));
        Delete4.setText("Delete");
        Delete4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete4ActionPerformed(evt);
            }
        });
        settingPasswordCont.add(Delete4);
        settingPasswordCont.add(sepMenu4);

        SelectAll4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        SelectAll4.setText("Select All");
        SelectAll4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectAll4ActionPerformed(evt);
            }
        });
        settingPasswordCont.add(SelectAll4);

        DeleteAll4.setText("Delete All");
        DeleteAll4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteAll4ActionPerformed(evt);
            }
        });
        settingPasswordCont.add(DeleteAll4);

        Cut5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        Cut5.setText("Cut");
        Cut5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cut5ActionPerformed(evt);
            }
        });
        settingURLCont.add(Cut5);

        Copy5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        Copy5.setText("Copy");
        Copy5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Copy5ActionPerformed(evt);
            }
        });
        settingURLCont.add(Copy5);

        Paste5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        Paste5.setText("Paste");
        Paste5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Paste5ActionPerformed(evt);
            }
        });
        settingURLCont.add(Paste5);

        Delete5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0));
        Delete5.setText("Delete");
        Delete5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete5ActionPerformed(evt);
            }
        });
        settingURLCont.add(Delete5);
        settingURLCont.add(sepMenu5);

        SelectAll5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        SelectAll5.setText("Select All");
        SelectAll5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectAll5ActionPerformed(evt);
            }
        });
        settingURLCont.add(SelectAll5);

        DeleteAll5.setText("Delete All");
        DeleteAll5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteAll5ActionPerformed(evt);
            }
        });
        settingURLCont.add(DeleteAll5);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login AMS System");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnSetting.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/settings.gif"))); // NOI18N
        btnSetting.setText("Setting Database");
        btnSetting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSettingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(149, 149, 149)
                .addComponent(btnSetting)
                .addContainerGap(153, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSetting)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("UserID");

        jLabel2.setText("Password");

        txtLogUser.setComponentPopupMenu(UserIDContext);

        pwLogPassword.setComponentPopupMenu(paswordContext);

        cbUserType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tenant", "Landlord", "Manager" }));
        cbUserType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbUserTypeItemStateChanged(evt);
            }
        });

        btnLogin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/1341567561_tick_circle.png"))); // NOI18N
        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/1341567673_cancel.png"))); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        chkShowPasswordLogin.setText("Show Password");
        chkShowPasswordLogin.setName("showPassLogin");
        chkShowPasswordLogin.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkShowPasswordLoginItemStateChanged(evt);
            }
        });

        chRememberListener = new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                if(evt.getStateChange() == java.awt.event.ItemEvent.SELECTED){
                    try{
                        if(checkRemember()){
                            taLoginLog.append("User has exist remember\n");
                            return;
                        }
                        saveRemember();
                    }catch(java.sql.SQLException ex){
                        taLoginLog.append("\n" + ex.getMessage());
                    }catch(java.lang.ClassNotFoundException ex){
                        taLoginLog.append("\n" + ex.getMessage());
                    }
                }
                if(evt.getStateChange() == java.awt.event.ItemEvent.DESELECTED){
                    try{
                        if(checkRemember()){
                            deleteRemember();
                        }
                    }catch(java.sql.SQLException ex){
                        taLoginLog.append("\n" + ex.getMessage());
                    }catch(java.lang.ClassNotFoundException ex){
                        taLoginLog.append("\n" + ex.getMessage());
                    }
                }
            }
        };
        chkRememberMe.setText("Remember Me");
        chkRememberMe.setName("rememberMe");
        chkRememberMe.addItemListener(chRememberListener);

        jLabel6.setText("User Type");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnLogin)
                            .addComponent(chkRememberMe))
                        .addGap(52, 52, 52)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnCancel)
                            .addComponent(chkShowPasswordLogin)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtLogUser)
                            .addComponent(pwLogPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                            .addComponent(cbUserType, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtLogUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(pwLogPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbUserType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkShowPasswordLogin)
                    .addComponent(chkRememberMe))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLogin)
                    .addComponent(btnCancel))
                .addContainerGap())
        );

        taLoginLog.setColumns(20);
        taLoginLog.setForeground(new java.awt.Color(0, 153, 51));
        taLoginLog.setRows(5);
        taLoginLog.setToolTipText("Logging");
        taLoginLog.setComponentPopupMenu(loggingContextMenu);
        jScrollPane1.setViewportView(taLoginLog);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSettingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSettingActionPerformed
        try {
            SettingHandler sh8 = new SettingHandler();
            sh8.loadStting(this.txtUseDB, this.pwPassDB, this.txtURL);
        } catch (ClassNotFoundException ex) {
            this.taLoginLog.append("Not Found SQLite Driver...\n");
        } catch (SQLException ex) {
            this.taLoginLog.append("Check SQLite syntax...\n");
        }
        this.dlgSetting.setVisible(true);
        this.dlgSetting.pack();
    }//GEN-LAST:event_btnSettingActionPerformed

    private void btnSettingSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSettingSaveActionPerformed
        String userDb = this.txtUseDB.getText();
        String pwDB = String.valueOf(this.pwPassDB.getPassword());
        String url = this.txtURL.getText();
        SettingHandler sh9 = new SettingHandler();
        try {
            sh9.saveSetting(userDb, pwDB, url);
            this.taLoginLog.append("Save setting successful !...\n");
            this.dlgSetting.dispose();
            this.dispose();
            this.setVisible(true);
        } catch (SQLException ex) {
            this.taLoginLog.append("Check SQLite syntax...\n");
        } catch (ClassNotFoundException ex) {
            this.taLoginLog.append("Not Found SQLite Driver...\n");
        }
    }//GEN-LAST:event_btnSettingSaveActionPerformed

    private void btnSettingCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSettingCloseActionPerformed
        this.dlgSetting.dispose();
    }//GEN-LAST:event_btnSettingCloseActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        UserProfilesHandler uh = new UserProfilesHandler();
        String user = this.txtLogUser.getText();
        String pass = String.valueOf(this.pwLogPassword.getPassword());
        uh.setCurrentProfile(user);//session user
        if (!utils.FormChecker.checkEmptyTextFields(this.txtLogUser)) {
            this.taLoginLog.append("Please enter username..\n");
            return;
        }
        if (!utils.FormChecker.checkPasswordField(this.pwLogPassword)) {
            this.taLoginLog.append("Password cannot be blank or less than 6 character...\n");
            return;
        }
        
        try {
            int userType = this.cbUserType.getSelectedIndex();
            switch (userType) {
                case 0:
                    TenantFrame = new TenantFrame();
                    uh.setTableName(uh.getTENANT_TBL());
                    uh.setColumnNameID(uh.getTENANT_ID());
                    uh.setColumnNamePwd(uh.getTENANT_PWD());
                    try {
                        if (uh.authenticate(user, pass)) {
                            TenantFrame.setVisible(true);
                            TenantFrame.pack();
                            this.dispose();
                        } else {
                            javax.swing.JOptionPane.showMessageDialog(this, "Username or Password Wrong");
                        }
                    } catch (NoSuchAlgorithmException ex) {
                        this.taLoginLog.append("\n" + ex.getMessage());
                    }
                    break;
                case 1:
                    landlordFrame = new LandlordFrame();
                    landlordFrame.uh = uh;
                    uh.setTableName(uh.getLANDLORD_TBL());
                    uh.setColumnNameID(uh.getLANDLORD_ID());
                    uh.setColumnNamePwd(uh.getLANDLORD_PWD());
                    try {
                        if (uh.authenticate(user, pass)) {
                            landlordFrame.setVisible(true);
                            this.dispose();
                        } else {
                            javax.swing.JOptionPane.showMessageDialog(this, "Username or Password Wrong");
                        }
                    } catch (NoSuchAlgorithmException ex) {
                        this.taLoginLog.append("\n" + ex.getMessage());
                    }
                    break;
                case 2:
                    managerFrame = new ManagerFrame();
                    uh.setTableName(uh.getEMPLOYEE_TBL());
                    uh.setColumnNameID(uh.getEMPLOYEE_ID());
                    uh.setColumnNamePwd(uh.getEMPLOYEE_PWD());
                    try {
                        if (uh.authenticate(user, pass)) {
                            managerFrame.setVisible(true);
                            this.dispose();
                        } else {
                            javax.swing.JOptionPane.showMessageDialog(this, "Username or Password Wrong");
                        }
                    } catch (NoSuchAlgorithmException ex) {
                        this.taLoginLog.append("\n" + ex.getMessage());
                    }
                    break;
            }
        } catch (ClassNotFoundException ex) {
            this.taLoginLog.append(ex.getMessage());
        } catch (SQLException ex) {
            this.taLoginLog.append(ex.getMessage());
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void CutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CutActionPerformed
        this.taLoginLog.cut();
    }//GEN-LAST:event_CutActionPerformed

    private void CopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CopyActionPerformed
        this.taLoginLog.copy();
    }//GEN-LAST:event_CopyActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        this.taLoginLog.replaceSelection(null);
    }//GEN-LAST:event_DeleteActionPerformed

    private void SelectAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectAllActionPerformed
        this.taLoginLog.selectAll();
    }//GEN-LAST:event_SelectAllActionPerformed

    private void PasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasteActionPerformed
        this.taLoginLog.paste();
    }//GEN-LAST:event_PasteActionPerformed

    private void DeleteAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteAllActionPerformed
        this.taLoginLog.setText(null);
    }//GEN-LAST:event_DeleteAllActionPerformed

    private void Cut1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cut1ActionPerformed
        this.txtLogUser.cut();
    }//GEN-LAST:event_Cut1ActionPerformed

    private void Copy1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Copy1ActionPerformed
        this.txtLogUser.copy();
    }//GEN-LAST:event_Copy1ActionPerformed

    private void Paste1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Paste1ActionPerformed
        this.txtLogUser.paste();
    }//GEN-LAST:event_Paste1ActionPerformed

    private void Delete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete1ActionPerformed
        this.txtLogUser.replaceSelection(null);
    }//GEN-LAST:event_Delete1ActionPerformed

    private void SelectAll1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectAll1ActionPerformed
        this.txtLogUser.selectAll();
    }//GEN-LAST:event_SelectAll1ActionPerformed

    private void DeleteAll1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteAll1ActionPerformed
        this.txtLogUser.setText(null);
    }//GEN-LAST:event_DeleteAll1ActionPerformed

    private void Cut2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cut2ActionPerformed
        this.pwLogPassword.cut();
    }//GEN-LAST:event_Cut2ActionPerformed

    private void Copy2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Copy2ActionPerformed
        this.pwLogPassword.copy();
    }//GEN-LAST:event_Copy2ActionPerformed

    private void Paste2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Paste2ActionPerformed
        this.pwLogPassword.paste();
    }//GEN-LAST:event_Paste2ActionPerformed

    private void Delete2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete2ActionPerformed
        this.pwLogPassword.replaceSelection(null);
    }//GEN-LAST:event_Delete2ActionPerformed

    private void SelectAll2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectAll2ActionPerformed
        this.pwLogPassword.selectAll();
    }//GEN-LAST:event_SelectAll2ActionPerformed

    private void DeleteAll2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteAll2ActionPerformed
        this.pwLogPassword.setText(null);
    }//GEN-LAST:event_DeleteAll2ActionPerformed

    private void Cut3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cut3ActionPerformed
        this.txtUseDB.cut();
    }//GEN-LAST:event_Cut3ActionPerformed

    private void Copy3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Copy3ActionPerformed
        this.txtUseDB.copy();
    }//GEN-LAST:event_Copy3ActionPerformed

    private void Paste3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Paste3ActionPerformed
        this.txtUseDB.paste();
    }//GEN-LAST:event_Paste3ActionPerformed

    private void Delete3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete3ActionPerformed
        this.txtUseDB.replaceSelection(null);
    }//GEN-LAST:event_Delete3ActionPerformed

    private void SelectAll3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectAll3ActionPerformed
        this.txtUseDB.selectAll();
    }//GEN-LAST:event_SelectAll3ActionPerformed

    private void DeleteAll3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteAll3ActionPerformed
        this.txtUseDB.setText(null);
    }//GEN-LAST:event_DeleteAll3ActionPerformed

    private void Cut4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cut4ActionPerformed
        this.pwPassDB.cut();
    }//GEN-LAST:event_Cut4ActionPerformed

    private void Copy4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Copy4ActionPerformed
        this.pwPassDB.copy();
    }//GEN-LAST:event_Copy4ActionPerformed

    private void Paste4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Paste4ActionPerformed
        this.pwPassDB.paste();
    }//GEN-LAST:event_Paste4ActionPerformed

    private void Delete4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete4ActionPerformed
        this.pwPassDB.replaceSelection(null);
    }//GEN-LAST:event_Delete4ActionPerformed

    private void SelectAll4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectAll4ActionPerformed
        this.pwPassDB.selectAll();
    }//GEN-LAST:event_SelectAll4ActionPerformed

    private void DeleteAll4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteAll4ActionPerformed
        this.pwPassDB.setText(null);
    }//GEN-LAST:event_DeleteAll4ActionPerformed

    private void Cut5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cut5ActionPerformed
        this.txtURL.cut();
    }//GEN-LAST:event_Cut5ActionPerformed

    private void Copy5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Copy5ActionPerformed
        this.txtURL.copy();
    }//GEN-LAST:event_Copy5ActionPerformed

    private void Paste5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Paste5ActionPerformed
        this.txtURL.paste();
    }//GEN-LAST:event_Paste5ActionPerformed

    private void Delete5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete5ActionPerformed
        this.txtURL.replaceSelection(null);
    }//GEN-LAST:event_Delete5ActionPerformed

    private void SelectAll5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectAll5ActionPerformed
        this.txtURL.selectAll();
    }//GEN-LAST:event_SelectAll5ActionPerformed

    private void DeleteAll5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteAll5ActionPerformed
        this.txtURL.setText(null);
    }//GEN-LAST:event_DeleteAll5ActionPerformed

    private void chkShowPasswordLoginItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkShowPasswordLoginItemStateChanged
        //this is state change for show password
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
            pwLogPassword.setEchoChar((char) 0);
        }
        if (evt.getStateChange() == java.awt.event.ItemEvent.DESELECTED) {
            this.pwLogPassword.setEchoChar('*');
            
        }
    }//GEN-LAST:event_chkShowPasswordLoginItemStateChanged

    private void cbUserTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbUserTypeItemStateChanged
        if ((evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) && evt.getItem().toString().equals("Landlord")) {
            SettingHandler sLandlord = new SettingHandler();
            try {
                String data[] = sLandlord.loadRememberMeWithUserType(1);
                this.txtLogUser.setText(data[0] == null ? null : data[0]);
                this.pwLogPassword.setText(data[1] == null ? null : data[1]);
            } catch (SQLException ex) {
                Logger.getLogger(LoginFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if ((evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) && evt.getItem().toString().equals("Tenant")) {
            SettingHandler sTenant = new SettingHandler();
            try {
                String data[] = sTenant.loadRememberMeWithUserType(0);
                this.txtLogUser.setText(data[0] == null ? null : data[0]);
                this.pwLogPassword.setText(data[1] == null ? null : data[1]);
            } catch (SQLException ex) {
                Logger.getLogger(LoginFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if ((evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) && evt.getItem().toString().equals("Manager")) {
            SettingHandler sManager = new SettingHandler();
            try {
                String data[] = sManager.loadRememberMeWithUserType(2);
                this.txtLogUser.setText(data[0] == null ? null : data[0]);
                this.pwLogPassword.setText(data[1] == null ? null : data[1]);
            } catch (SQLException ex) {
                Logger.getLogger(LoginFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_cbUserTypeItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new LoginFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Copy;
    private javax.swing.JMenuItem Copy1;
    private javax.swing.JMenuItem Copy2;
    private javax.swing.JMenuItem Copy3;
    private javax.swing.JMenuItem Copy4;
    private javax.swing.JMenuItem Copy5;
    private javax.swing.JMenuItem Cut;
    private javax.swing.JMenuItem Cut1;
    private javax.swing.JMenuItem Cut2;
    private javax.swing.JMenuItem Cut3;
    private javax.swing.JMenuItem Cut4;
    private javax.swing.JMenuItem Cut5;
    private javax.swing.JMenuItem Delete;
    private javax.swing.JMenuItem Delete1;
    private javax.swing.JMenuItem Delete2;
    private javax.swing.JMenuItem Delete3;
    private javax.swing.JMenuItem Delete4;
    private javax.swing.JMenuItem Delete5;
    private javax.swing.JMenuItem DeleteAll;
    private javax.swing.JMenuItem DeleteAll1;
    private javax.swing.JMenuItem DeleteAll2;
    private javax.swing.JMenuItem DeleteAll3;
    private javax.swing.JMenuItem DeleteAll4;
    private javax.swing.JMenuItem DeleteAll5;
    private javax.swing.JMenuItem Paste;
    private javax.swing.JMenuItem Paste1;
    private javax.swing.JMenuItem Paste2;
    private javax.swing.JMenuItem Paste3;
    private javax.swing.JMenuItem Paste4;
    private javax.swing.JMenuItem Paste5;
    private javax.swing.JMenuItem SelectAll;
    private javax.swing.JMenuItem SelectAll1;
    private javax.swing.JMenuItem SelectAll2;
    private javax.swing.JMenuItem SelectAll3;
    private javax.swing.JMenuItem SelectAll4;
    private javax.swing.JMenuItem SelectAll5;
    private javax.swing.JPopupMenu UserIDContext;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnSetting;
    private javax.swing.JButton btnSettingClose;
    private javax.swing.JButton btnSettingSave;
    private javax.swing.JComboBox cbUserType;
    private java.awt.event.ItemListener chRememberListener;
    private javax.swing.JCheckBox chkRememberMe;
    private javax.swing.JCheckBox chkShowPasswordLogin;
    private javax.swing.JDialog dlgSetting;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu loggingContextMenu;
    private javax.swing.JPopupMenu paswordContext;
    private javax.swing.JPasswordField pwLogPassword;
    private javax.swing.JPasswordField pwPassDB;
    private javax.swing.JPopupMenu.Separator sepMenu;
    private javax.swing.JPopupMenu.Separator sepMenu1;
    private javax.swing.JPopupMenu.Separator sepMenu2;
    private javax.swing.JPopupMenu.Separator sepMenu3;
    private javax.swing.JPopupMenu.Separator sepMenu4;
    private javax.swing.JPopupMenu.Separator sepMenu5;
    private javax.swing.JPopupMenu settingPasswordCont;
    private javax.swing.JPopupMenu settingURLCont;
    private javax.swing.JPopupMenu settingUserCont;
    private javax.swing.JTextArea taLoginLog;
    private javax.swing.JTextField txtLogUser;
    private javax.swing.JTextField txtURL;
    private javax.swing.JTextField txtUseDB;
    // End of variables declaration//GEN-END:variables
}
